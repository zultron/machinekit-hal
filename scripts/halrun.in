#!/bin/bash

prefix=@prefix@
exec_prefix=@exec_prefix@
PATH=@HAL_BIN_DIR@:$PATH
REALTIME=@REALTIME@
THIS=$(basename $0)

export HAL_RTMOD_DIR=@HAL_RTLIB_DIR@

help () {
halcmd -h
cat <<EOF

$THIS Usage:

  $THIS [-I] [halcmd_opts] [filename[.hal]
  $THIS  -T  [halcmd_opts] [filename[.hal]]

  $THIS  -h  this help
  $THIS  -U  forcibly cause the realtime environment to exit

  filename[.hal] may also be specified as '-f filename[.hal]'
  halcmd_opts apply for .hal files only

  Interactive if: no filename (runs halcmd)
              or  -I          (runs halcmd)

EOF
}

INTERACTIVE=""
inifile=""
theargs=""
while getopts "ef:hi:kqsvIRQTUV" opt ; do
  case $opt in
    h) help; exit_handler 0;;

    U) halcmd -R
       halcmd stop
       halcmd unload all
       exit_handler 0;;

    f) filename=$OPTARG;;
    i) inifile=$OPTARG;;

    I) INTERACTIVE="halcmd -kf";;

    e) theargs="$theargs -$opt";;
    k) theargs="$theargs -$opt";;
    q) theargs="$theargs -$opt";;
    s) theargs="$theargs -$opt";;
    v) theargs="$theargs -$opt";;
    R) theargs="$theargs -$opt";;
    Q) theargs="$theargs -$opt";;
    V) theargs="$theargs -$opt";;
   \?) exit_handler 1 "\nFor usage try: $THIS -h";;
  esac
done
shift $(($OPTIND - 1))

if [ $# -gt 1 ] ; then
  exit_handler 1 "$THIS: too many arguments <$*>"
fi

# filename can be specified two ways:
#    as parameter for -f ('f filename')
# or as trailing parameter
if [ $# -gt 0 ] ; then
  if [ "X$filename" = "X" ] ; then
    filename=$1
    shift
  else
    exit_handler 1 "$THIS: Error: Specified '-f $1' and also <$filename>"
    
  fi
fi

if $REALTIME status > /dev/null; then
    exit_handler 1 \
	"$THIS: Realtime already running.  Use 'halrun -U' to stop existing realtime session."
fi

HAVEFILE=false
case $filename in
  *.hal) HAVEFILE=true
         if [ -n "$inifile" ] ; then
           theargs="$theargs -i $inifile"
         fi
         # halcmd uses all $theargs:
         set -- "$theargs -f $filename";;
     "") # for nil filename, support interactive halcmd
         INTERACTIVE="halcmd $theargs -kf"
         ;;
      *) exit_handler 1 "$THIS: Unknown file extension for filename=<$filename>"
         ;;
esac

case "$INTERACTIVE" in
  halcmd*) if [ -n "$inifile" ] ; then
             INTERACTIVE="$INTERACTIVE -i $inifile"
           fi
           ;;
esac

exit_handler() {
    rc=$1; shift
    test -z "$*" || echo -e "$*" >&2
    test $rc = 0 || $REALTIME stop
    trap - ${EXIT_HANDLER_SIGNALS} EXIT
    exit $rc
}

EXIT_HANDLER_SIGNALS="1 2 3 9 15"
trap "exit_handler 1 Caught interrupt" $EXIT_HANDLER_SIGNALS
trap "exit_handler 0" EXIT

$REALTIME start || exit_handler 1 "realtime failed to start"

if $HAVEFILE ; then
    halcmd $@; result=$?
fi

if [ ! -z "$INTERACTIVE" ]; then $INTERACTIVE; fi

halcmd stop || result=$?

$REALTIME stop || result=$?

exit_handler $result
